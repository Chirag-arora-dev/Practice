{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Copy of Classification(Scikit Learn)","provenance":[{"file_id":"11VIdTtTlJcm13QVoxzCl75UVCHhDjSlk","timestamp":1596357745189}],"collapsed_sections":[],"authorship_tag":"ABX9TyPpWp2DdmoVVzbDAqzv/bch"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"M5pmTfx2Y3eZ","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1596354552763,"user_tz":-330,"elapsed":3023,"user":{"displayName":"Chirag Arora","photoUrl":"","userId":"14963995015881610888"}}},"source":["import numpy as  np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","%matplotlib inline"],"execution_count":1,"outputs":[]},{"cell_type":"code","metadata":{"id":"t8MHwEYDZZ2f","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1596354556092,"user_tz":-330,"elapsed":1621,"user":{"displayName":"Chirag Arora","photoUrl":"","userId":"14963995015881610888"}}},"source":["samp = pd.read_csv(\"heart-disease.csv\")"],"execution_count":2,"outputs":[]},{"cell_type":"code","metadata":{"id":"ZovsEBvQZnnN","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":204},"executionInfo":{"status":"ok","timestamp":1596354559767,"user_tz":-330,"elapsed":1084,"user":{"displayName":"Chirag Arora","photoUrl":"","userId":"14963995015881610888"}},"outputId":"9ccac1de-7c17-4e5c-92c5-2d16a3d3a860"},"source":["samp.head()"],"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>sex</th>\n","      <th>cp</th>\n","      <th>trestbps</th>\n","      <th>chol</th>\n","      <th>fbs</th>\n","      <th>restecg</th>\n","      <th>thalach</th>\n","      <th>exang</th>\n","      <th>oldpeak</th>\n","      <th>slope</th>\n","      <th>ca</th>\n","      <th>thal</th>\n","      <th>target</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>63</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>145</td>\n","      <td>233</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>150</td>\n","      <td>0</td>\n","      <td>2.3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>37</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>130</td>\n","      <td>250</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>187</td>\n","      <td>0</td>\n","      <td>3.5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>41</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>130</td>\n","      <td>204</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>172</td>\n","      <td>0</td>\n","      <td>1.4</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>56</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>120</td>\n","      <td>236</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>178</td>\n","      <td>0</td>\n","      <td>0.8</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>57</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>120</td>\n","      <td>354</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>163</td>\n","      <td>1</td>\n","      <td>0.6</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   age  sex  cp  trestbps  chol  fbs  ...  exang  oldpeak  slope  ca  thal  target\n","0   63    1   3       145   233    1  ...      0      2.3      0   0     1       1\n","1   37    1   2       130   250    0  ...      0      3.5      0   0     2       1\n","2   41    0   1       130   204    0  ...      0      1.4      2   0     2       1\n","3   56    1   1       120   236    0  ...      0      0.8      2   0     2       1\n","4   57    0   0       120   354    0  ...      1      0.6      2   0     2       1\n","\n","[5 rows x 14 columns]"]},"metadata":{"tags":[]},"execution_count":3}]},{"cell_type":"code","metadata":{"id":"-bK0oYPFZxeu","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":204},"executionInfo":{"status":"ok","timestamp":1596354561429,"user_tz":-330,"elapsed":923,"user":{"displayName":"Chirag Arora","photoUrl":"","userId":"14963995015881610888"}},"outputId":"12549b27-59c3-4f3c-943b-dcbb375e639a"},"source":["samp.tail()"],"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>sex</th>\n","      <th>cp</th>\n","      <th>trestbps</th>\n","      <th>chol</th>\n","      <th>fbs</th>\n","      <th>restecg</th>\n","      <th>thalach</th>\n","      <th>exang</th>\n","      <th>oldpeak</th>\n","      <th>slope</th>\n","      <th>ca</th>\n","      <th>thal</th>\n","      <th>target</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>298</th>\n","      <td>57</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>140</td>\n","      <td>241</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>123</td>\n","      <td>1</td>\n","      <td>0.2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>299</th>\n","      <td>45</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>110</td>\n","      <td>264</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>132</td>\n","      <td>0</td>\n","      <td>1.2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>300</th>\n","      <td>68</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>144</td>\n","      <td>193</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>141</td>\n","      <td>0</td>\n","      <td>3.4</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>301</th>\n","      <td>57</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>130</td>\n","      <td>131</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>115</td>\n","      <td>1</td>\n","      <td>1.2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>302</th>\n","      <td>57</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>130</td>\n","      <td>236</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>174</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["     age  sex  cp  trestbps  chol  fbs  ...  exang  oldpeak  slope  ca  thal  target\n","298   57    0   0       140   241    0  ...      1      0.2      1   0     3       0\n","299   45    1   3       110   264    0  ...      0      1.2      1   0     3       0\n","300   68    1   0       144   193    1  ...      0      3.4      1   2     3       0\n","301   57    1   0       130   131    0  ...      1      1.2      1   1     3       0\n","302   57    0   1       130   236    0  ...      0      0.0      1   1     2       0\n","\n","[5 rows x 14 columns]"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"code","metadata":{"id":"voqK2josZzG8","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":272},"executionInfo":{"status":"ok","timestamp":1596354569383,"user_tz":-330,"elapsed":1042,"user":{"displayName":"Chirag Arora","photoUrl":"","userId":"14963995015881610888"}},"outputId":"787d9069-407e-4870-9418-7a06d44f9e74"},"source":["samp.dtypes"],"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["age           int64\n","sex           int64\n","cp            int64\n","trestbps      int64\n","chol          int64\n","fbs           int64\n","restecg       int64\n","thalach       int64\n","exang         int64\n","oldpeak     float64\n","slope         int64\n","ca            int64\n","thal          int64\n","target        int64\n","dtype: object"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"code","metadata":{"id":"KCYMlz-a6rIA","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":283},"executionInfo":{"status":"ok","timestamp":1596354574797,"user_tz":-330,"elapsed":1156,"user":{"displayName":"Chirag Arora","photoUrl":"","userId":"14963995015881610888"}},"outputId":"92cd76a0-b990-4eb3-dd07-5f6e227e8a8a"},"source":["#Using the matplotlib method\n","fig,ax = plt.subplots()\n","samp.plot(kind='scatter',\n","          x='age',\n","          y='chol',\n","          c='target',\n","          ax = ax);\n"],"execution_count":6,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"LDCckDxWeY5q","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":459},"executionInfo":{"status":"ok","timestamp":1596354588010,"user_tz":-330,"elapsed":947,"user":{"displayName":"Chirag Arora","photoUrl":"","userId":"14963995015881610888"}},"outputId":"cc48ae94-a0fc-472d-8dc4-a1375fc1064e"},"source":["plt.style.available"],"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['Solarize_Light2',\n"," '_classic_test_patch',\n"," 'bmh',\n"," 'classic',\n"," 'dark_background',\n"," 'fast',\n"," 'fivethirtyeight',\n"," 'ggplot',\n"," 'grayscale',\n"," 'seaborn',\n"," 'seaborn-bright',\n"," 'seaborn-colorblind',\n"," 'seaborn-dark',\n"," 'seaborn-dark-palette',\n"," 'seaborn-darkgrid',\n"," 'seaborn-deep',\n"," 'seaborn-muted',\n"," 'seaborn-notebook',\n"," 'seaborn-paper',\n"," 'seaborn-pastel',\n"," 'seaborn-poster',\n"," 'seaborn-talk',\n"," 'seaborn-ticks',\n"," 'seaborn-white',\n"," 'seaborn-whitegrid',\n"," 'tableau-colorblind10']"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"code","metadata":{"id":"5Z0-8lcBelwa","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":204},"executionInfo":{"status":"ok","timestamp":1596354595156,"user_tz":-330,"elapsed":983,"user":{"displayName":"Chirag Arora","photoUrl":"","userId":"14963995015881610888"}},"outputId":"9d9daf56-60a1-4253-e3ac-c690d9df63fb"},"source":["plt.style.use(\"ggplot\")\n","samp.head()\n"],"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>sex</th>\n","      <th>cp</th>\n","      <th>trestbps</th>\n","      <th>chol</th>\n","      <th>fbs</th>\n","      <th>restecg</th>\n","      <th>thalach</th>\n","      <th>exang</th>\n","      <th>oldpeak</th>\n","      <th>slope</th>\n","      <th>ca</th>\n","      <th>thal</th>\n","      <th>target</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>63</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>145</td>\n","      <td>233</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>150</td>\n","      <td>0</td>\n","      <td>2.3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>37</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>130</td>\n","      <td>250</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>187</td>\n","      <td>0</td>\n","      <td>3.5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>41</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>130</td>\n","      <td>204</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>172</td>\n","      <td>0</td>\n","      <td>1.4</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>56</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>120</td>\n","      <td>236</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>178</td>\n","      <td>0</td>\n","      <td>0.8</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>57</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>120</td>\n","      <td>354</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>163</td>\n","      <td>1</td>\n","      <td>0.6</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   age  sex  cp  trestbps  chol  fbs  ...  exang  oldpeak  slope  ca  thal  target\n","0   63    1   3       145   233    1  ...      0      2.3      0   0     1       1\n","1   37    1   2       130   250    0  ...      0      3.5      0   0     2       1\n","2   41    0   1       130   204    0  ...      0      1.4      2   0     2       1\n","3   56    1   1       120   236    0  ...      0      0.8      2   0     2       1\n","4   57    0   0       120   354    0  ...      1      0.6      2   0     2       1\n","\n","[5 rows x 14 columns]"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"code","metadata":{"id":"z-ntZtxHexFr","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":320},"executionInfo":{"status":"ok","timestamp":1596354598053,"user_tz":-330,"elapsed":1042,"user":{"displayName":"Chirag Arora","photoUrl":"","userId":"14963995015881610888"}},"outputId":"d36c3899-dcec-4922-bc2f-6cfa8a60d1d3"},"source":["#splitting into x and y \n","x = samp.drop(\"target\",axis = 1)\n","y = samp[\"target\"]\n","y.hist(figsize=(5,5));\n","\n"],"execution_count":9,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 360x360 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"wjcs5tlzgRpN","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1596354607677,"user_tz":-330,"elapsed":1525,"user":{"displayName":"Chirag Arora","photoUrl":"","userId":"14963995015881610888"}}},"source":["#splitting into testing and training data\n","from sklearn.model_selection import train_test_split\n","x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.3)"],"execution_count":10,"outputs":[]},{"cell_type":"code","metadata":{"id":"YoB9aIBGgwIC","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1596354609725,"user_tz":-330,"elapsed":1006,"user":{"displayName":"Chirag Arora","photoUrl":"","userId":"14963995015881610888"}}},"source":["#using random forest classification \n","np.random.seed(42)\n","from sklearn.ensemble import RandomForestClassifier\n","clf = RandomForestClassifier(n_estimators=100)\n"],"execution_count":11,"outputs":[]},{"cell_type":"code","metadata":{"id":"TcKIbfqchGf5","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":153},"executionInfo":{"status":"ok","timestamp":1596354611835,"user_tz":-330,"elapsed":959,"user":{"displayName":"Chirag Arora","photoUrl":"","userId":"14963995015881610888"}},"outputId":"4e0cb752-71ef-4058-8ce7-9a37858dc85c"},"source":["clf.get_params"],"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<bound method BaseEstimator.get_params of RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,\n","                       criterion='gini', max_depth=None, max_features='auto',\n","                       max_leaf_nodes=None, max_samples=None,\n","                       min_impurity_decrease=0.0, min_impurity_split=None,\n","                       min_samples_leaf=1, min_samples_split=2,\n","                       min_weight_fraction_leaf=0.0, n_estimators=100,\n","                       n_jobs=None, oob_score=False, random_state=None,\n","                       verbose=0, warm_start=False)>"]},"metadata":{"tags":[]},"execution_count":12}]},{"cell_type":"code","metadata":{"id":"RyCX8xrJhIqk","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":153},"executionInfo":{"status":"ok","timestamp":1596354619635,"user_tz":-330,"elapsed":992,"user":{"displayName":"Chirag Arora","photoUrl":"","userId":"14963995015881610888"}},"outputId":"5e3e26c9-3336-422f-9524-164b078b8610"},"source":["#fitting the model\n","clf.fit(x_train,y_train)"],"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,\n","                       criterion='gini', max_depth=None, max_features='auto',\n","                       max_leaf_nodes=None, max_samples=None,\n","                       min_impurity_decrease=0.0, min_impurity_split=None,\n","                       min_samples_leaf=1, min_samples_split=2,\n","                       min_weight_fraction_leaf=0.0, n_estimators=100,\n","                       n_jobs=None, oob_score=False, random_state=None,\n","                       verbose=0, warm_start=False)"]},"metadata":{"tags":[]},"execution_count":13}]},{"cell_type":"code","metadata":{"id":"SfLqHOXGhWUI","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1596354621294,"user_tz":-330,"elapsed":863,"user":{"displayName":"Chirag Arora","photoUrl":"","userId":"14963995015881610888"}},"outputId":"2f0e6472-6488-419b-89ab-bad71452eb7e"},"source":["#scoring the model accuracy\n","clf.score(x_test,y_test)\n","clf.score(x_train,y_train)"],"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1.0"]},"metadata":{"tags":[]},"execution_count":14}]},{"cell_type":"code","metadata":{"id":"o7fuOZ7fhjjU","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":102},"executionInfo":{"status":"ok","timestamp":1596354628795,"user_tz":-330,"elapsed":1106,"user":{"displayName":"Chirag Arora","photoUrl":"","userId":"14963995015881610888"}},"outputId":"fcd362f1-c8c1-438e-b4cb-6e1a29ded7ca"},"source":["#making predictions\n","y_preds = clf.predict(x_test)\n","y_preds"],"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1,\n","       0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1,\n","       1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1,\n","       0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0,\n","       1, 1, 1])"]},"metadata":{"tags":[]},"execution_count":15}]},{"cell_type":"code","metadata":{"id":"1aJIEnQahuJc","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":187},"executionInfo":{"status":"ok","timestamp":1596354631750,"user_tz":-330,"elapsed":1037,"user":{"displayName":"Chirag Arora","photoUrl":"","userId":"14963995015881610888"}},"outputId":"89eef3d5-5a39-4a80-f9f9-d161506500fe"},"source":["#another way to predict\n","y_preds_2 = clf.predict_proba(x_test)\n","y_preds_2[:10]"],"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.56, 0.44],\n","       [0.35, 0.65],\n","       [0.26, 0.74],\n","       [0.19, 0.81],\n","       [0.04, 0.96],\n","       [0.94, 0.06],\n","       [0.05, 0.95],\n","       [0.27, 0.73],\n","       [0.29, 0.71],\n","       [0.49, 0.51]])"]},"metadata":{"tags":[]},"execution_count":16}]},{"cell_type":"code","metadata":{"id":"FuodRYXeh4wi","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":170},"executionInfo":{"status":"ok","timestamp":1596354641188,"user_tz":-330,"elapsed":1091,"user":{"displayName":"Chirag Arora","photoUrl":"","userId":"14963995015881610888"}},"outputId":"44ee198f-9bee-4dcc-c301-f0485b8b5d85"},"source":["#making further evaluations \n","from sklearn.metrics import classification_report,confusion_matrix,accuracy_score\n","print(classification_report(y_test,y_preds))"],"execution_count":17,"outputs":[{"output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.79      0.76      0.77        41\n","           1       0.81      0.84      0.82        50\n","\n","    accuracy                           0.80        91\n","   macro avg       0.80      0.80      0.80        91\n","weighted avg       0.80      0.80      0.80        91\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"lf7tjoKujLX-","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1596354643736,"user_tz":-330,"elapsed":994,"user":{"displayName":"Chirag Arora","photoUrl":"","userId":"14963995015881610888"}},"outputId":"0fd5d96c-f8d0-455e-93f2-a12031e48ff2"},"source":["#accuracy score \n","print(accuracy_score(y_test,y_preds))"],"execution_count":18,"outputs":[{"output_type":"stream","text":["0.8021978021978022\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"feVtWPwLjUMi","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":51},"executionInfo":{"status":"ok","timestamp":1596354645776,"user_tz":-330,"elapsed":1205,"user":{"displayName":"Chirag Arora","photoUrl":"","userId":"14963995015881610888"}},"outputId":"c3153744-a820-469e-a3ce-7f2f1519d981"},"source":["#checking the confusion matrix \n","confusion_matrix(y_test,y_preds)"],"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[31, 10],\n","       [ 8, 42]])"]},"metadata":{"tags":[]},"execution_count":19}]},{"cell_type":"code","metadata":{"id":"h3y36IyWjgPa","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1596354654281,"user_tz":-330,"elapsed":1602,"user":{"displayName":"Chirag Arora","photoUrl":"","userId":"14963995015881610888"}},"outputId":"5be3ea62-c47b-4df7-dbc4-465643bb9b40"},"source":["#using scoring parameters \n","np.random.seed(42)\n","from sklearn.model_selection import cross_val_score\n","cross_val_score(clf,x,y)"],"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.81967213, 0.90163934, 0.83606557, 0.78333333, 0.78333333])"]},"metadata":{"tags":[]},"execution_count":20}]},{"cell_type":"code","metadata":{"id":"6PbY7gcSkAow","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":51},"executionInfo":{"status":"ok","timestamp":1596354659662,"user_tz":-330,"elapsed":2573,"user":{"displayName":"Chirag Arora","photoUrl":"","userId":"14963995015881610888"}},"outputId":"b0b4d9ae-ab97-4524-c0a6-3aadb8f6f4f2"},"source":["#changing no of cross validations (default are 5)\n","cross_val_score(clf,x,y,cv=10)"],"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.90322581, 0.80645161, 0.83870968, 0.9       , 0.9       ,\n","       0.83333333, 0.73333333, 0.83333333, 0.73333333, 0.83333333])"]},"metadata":{"tags":[]},"execution_count":21}]},{"cell_type":"code","metadata":{"id":"kr2hx6uokMc-","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1596354669939,"user_tz":-330,"elapsed":1726,"user":{"displayName":"Chirag Arora","photoUrl":"","userId":"14963995015881610888"}}},"source":["# comparing single splitt and cross vallidation \n","clf.fit(x_test,y_test)\n","clf_single_score = clf.score(x_test,y_test)\n","#mean of cross validation \n","clf_cv_score = np.mean(cross_val_score(clf,x,y,cv=5))"],"execution_count":22,"outputs":[]},{"cell_type":"code","metadata":{"id":"_8Yrwqrkk5eA","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1596354670557,"user_tz":-330,"elapsed":1170,"user":{"displayName":"Chirag Arora","photoUrl":"","userId":"14963995015881610888"}},"outputId":"14b2e1ef-4124-4310-e56c-7737c36c7cdc"},"source":["#comparing the accuracy\n","clf_single_score,clf_cv_score"],"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1.0, 0.821584699453552)"]},"metadata":{"tags":[]},"execution_count":23}]},{"cell_type":"code","metadata":{"id":"JQknQgYBlF55","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1596354674903,"user_tz":-330,"elapsed":1110,"user":{"displayName":"Chirag Arora","photoUrl":"","userId":"14963995015881610888"}},"outputId":"0e2491f8-d747-4834-8071-b56060c7b84a"},"source":["#Model Evaluation Metrics \n","#using roc curve\n","from sklearn.metrics import roc_curve\n","y_probs = clf.predict_proba(x_test)\n","y_probs_positive = y_probs[:1]\n","y_probs_positive[:10]"],"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.29, 0.71]])"]},"metadata":{"tags":[]},"execution_count":24}]},{"cell_type":"code","metadata":{"id":"Qrq9f-h-l3xw","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":204},"executionInfo":{"status":"ok","timestamp":1596354684400,"user_tz":-330,"elapsed":1242,"user":{"displayName":"Chirag Arora","photoUrl":"","userId":"14963995015881610888"}},"outputId":"7a96fc97-b1ec-482f-ea0d-dbdb83070af4"},"source":["#issue with roc curve plotting\n","samp.head()\n"],"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>sex</th>\n","      <th>cp</th>\n","      <th>trestbps</th>\n","      <th>chol</th>\n","      <th>fbs</th>\n","      <th>restecg</th>\n","      <th>thalach</th>\n","      <th>exang</th>\n","      <th>oldpeak</th>\n","      <th>slope</th>\n","      <th>ca</th>\n","      <th>thal</th>\n","      <th>target</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>63</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>145</td>\n","      <td>233</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>150</td>\n","      <td>0</td>\n","      <td>2.3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>37</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>130</td>\n","      <td>250</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>187</td>\n","      <td>0</td>\n","      <td>3.5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>41</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>130</td>\n","      <td>204</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>172</td>\n","      <td>0</td>\n","      <td>1.4</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>56</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>120</td>\n","      <td>236</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>178</td>\n","      <td>0</td>\n","      <td>0.8</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>57</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>120</td>\n","      <td>354</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>163</td>\n","      <td>1</td>\n","      <td>0.6</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   age  sex  cp  trestbps  chol  fbs  ...  exang  oldpeak  slope  ca  thal  target\n","0   63    1   3       145   233    1  ...      0      2.3      0   0     1       1\n","1   37    1   2       130   250    0  ...      0      3.5      0   0     2       1\n","2   41    0   1       130   204    0  ...      0      1.4      2   0     2       1\n","3   56    1   1       120   236    0  ...      0      0.8      2   0     2       1\n","4   57    0   0       120   354    0  ...      1      0.6      2   0     2       1\n","\n","[5 rows x 14 columns]"]},"metadata":{"tags":[]},"execution_count":25}]},{"cell_type":"code","metadata":{"id":"aNJYrt4gmF4l","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":51},"executionInfo":{"status":"ok","timestamp":1596354687290,"user_tz":-330,"elapsed":1088,"user":{"displayName":"Chirag Arora","photoUrl":"","userId":"14963995015881610888"}},"outputId":"688dcce7-af37-42da-d99b-dd7cf5aa0f1e"},"source":["#using confusion matrix on dataset \n","np.random.seed(42)\n","from sklearn.metrics import confusion_matrix\n","y_preds = clf.predict(x_test)\n","confusion_matrix(y_test,y_preds)"],"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[41,  0],\n","       [ 0, 50]])"]},"metadata":{"tags":[]},"execution_count":26}]},{"cell_type":"code","metadata":{"id":"36xFPkyKnL4L","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":142},"executionInfo":{"status":"ok","timestamp":1596354694819,"user_tz":-330,"elapsed":1101,"user":{"displayName":"Chirag Arora","photoUrl":"","userId":"14963995015881610888"}},"outputId":"13044e65-5f67-4d2a-8b62-f7be713c0c92"},"source":["#visualizing conf matrix with pd.crosstab\n","pd.crosstab(y_test,\n","            y_preds,\n","            rownames = [\"Actual Labels\"],\n","            colnames= [\"Predicted labels\"])"],"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>Predicted labels</th>\n","      <th>0</th>\n","      <th>1</th>\n","    </tr>\n","    <tr>\n","      <th>Actual Labels</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>41</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>50</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["Predicted labels   0   1\n","Actual Labels           \n","0                 41   0\n","1                  0  50"]},"metadata":{"tags":[]},"execution_count":27}]},{"cell_type":"code","metadata":{"id":"axH14wkrnkxT","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":71},"executionInfo":{"status":"ok","timestamp":1596354701580,"user_tz":-330,"elapsed":999,"user":{"displayName":"Chirag Arora","photoUrl":"","userId":"14963995015881610888"}},"outputId":"35675f73-e21f-4d22-f2de-6e081c4564e9"},"source":["#visualizing conf matrix with seaborn heatmap \n","import seaborn as sns\n","sns.set(font_scale=1.5)"],"execution_count":28,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/statsmodels/tools/_testing.py:19: FutureWarning: pandas.util.testing is deprecated. Use the functions in the public API at pandas.testing instead.\n","  import pandas.util.testing as tm\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"lXGcJYiIn2BU","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":337},"executionInfo":{"status":"ok","timestamp":1596354707627,"user_tz":-330,"elapsed":1007,"user":{"displayName":"Chirag Arora","photoUrl":"","userId":"14963995015881610888"}},"outputId":"df7c01d6-10c5-4829-e1ab-0107fae7f92e"},"source":["#creating a confusion matrix\n","conf_mat = confusion_matrix(y_test,y_preds)\n","#plotting it using seaborn \n","plt.figure(figsize=(5,5))\n","sns.heatmap(conf_mat);"],"execution_count":29,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 360x360 with 2 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"3zBcak3EoHGH","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":352},"executionInfo":{"status":"ok","timestamp":1596354716222,"user_tz":-330,"elapsed":1041,"user":{"displayName":"Chirag Arora","photoUrl":"","userId":"14963995015881610888"}},"outputId":"4f272d16-be64-4824-af24-9c8ccd94c904"},"source":["import seaborn as sns\n","fig,ax = plt.subplots(figsize= (5,5))\n","ax = sns.heatmap(conf_mat,\n","        \t           annot = True,                  #creates annotations\n","                \t   cbar = False)\n","plt.xlabel(\"Predicted label\")\n","plt.ylabel(\"True label\")\n","plt.show()\n"],"execution_count":30,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 360x360 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"xEZYns3uvp9t","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1596354828485,"user_tz":-330,"elapsed":1521,"user":{"displayName":"Chirag Arora","photoUrl":"","userId":"14963995015881610888"}},"outputId":"463035e8-a803-4e31-8af1-e31daa3387cc"},"source":["#cross validation using scoring parameter \n","cv_acc = cross_val_score(clf,x,y,cv=5,scoring='accuracy') #by default it's accuracy\n","cv_acc"],"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.78688525, 0.86885246, 0.80327869, 0.78333333, 0.76666667])"]},"metadata":{"tags":[]},"execution_count":32}]},{"cell_type":"code","metadata":{"id":"9PM8EgxVKXAt","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1596354982145,"user_tz":-330,"elapsed":1737,"user":{"displayName":"Chirag Arora","photoUrl":"","userId":"14963995015881610888"}},"outputId":"60ee5540-bf31-470b-ac50-290d24d21824"},"source":["#using scoring as recall\n","cv_acc_2 = cross_val_score(clf,x,y,cv=5,scoring='recall')\n","cv_acc_2"],"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.87878788, 0.84848485, 0.78787879, 0.78787879, 0.90909091])"]},"metadata":{"tags":[]},"execution_count":33}]},{"cell_type":"code","metadata":{"colab_type":"code","id":"oyGzEw_GKr1c","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1596354993635,"user_tz":-330,"elapsed":1746,"user":{"displayName":"Chirag Arora","photoUrl":"","userId":"14963995015881610888"}},"outputId":"789e87b4-e827-488d-e9d3-73b818798254"},"source":["#scoring using precision \n","cv_acc_3 = cross_val_score(clf,x,y,cv=5,scoring='precision') #by default it's accuracy\n","cv_acc_3"],"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.82352941, 0.90625   , 0.84848485, 0.84375   , 0.75675676])"]},"metadata":{"tags":[]},"execution_count":34}]},{"cell_type":"code","metadata":{"id":"-9mggkf6LBaG","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1596355048674,"user_tz":-330,"elapsed":1678,"user":{"displayName":"Chirag Arora","photoUrl":"","userId":"14963995015881610888"}},"outputId":"82aee704-8f9d-4fdf-f15e-844c586081e4"},"source":["#scoring using f1\n","cv_acc_4 = cross_val_score(clf,x,y,scoring='f1')\n","cv_acc_4"],"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.86956522, 0.89230769, 0.81818182, 0.85294118, 0.79452055])"]},"metadata":{"tags":[]},"execution_count":35}]},{"cell_type":"code","metadata":{"id":"yKa65tGvLO23","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":377},"executionInfo":{"status":"ok","timestamp":1596355558944,"user_tz":-330,"elapsed":1081,"user":{"displayName":"Chirag Arora","photoUrl":"","userId":"14963995015881610888"}},"outputId":"b807fe33-3ab9-48b2-aa83-5413941bce81"},"source":["#comparing model accuracy of each method with each run\n","comp_scoring = pd.DataFrame(\n","    {\n","        \"Default\":cv_acc,\n","        \"Recall\":cv_acc_2,\n","        \"Precision\":cv_acc_3,\n","        \"F1\":cv_acc_4\n","    }\n",")\n","comp_scoring.plot.bar(figsize=(10,6));"],"execution_count":38,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 720x432 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"5eRr3dOFM6Mt","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":231},"executionInfo":{"status":"error","timestamp":1596357673614,"user_tz":-330,"elapsed":1288,"user":{"displayName":"Chirag Arora","photoUrl":"","userId":"14963995015881610888"}},"outputId":"d546683f-c7ae-499f-cfa7-9ed61f68cbc6"},"source":["#hyperparameter tuning using ranndomizedsearchcv (incomplete and incorrect)\n","from sklearn.model_selection import GridSearchCV\n","grid1 = {\n","    \"n_estimators\":[100,200,500],\n","    \"max_depth\":[None,4],\n","    \"max_features\":[\"auto\",\"sqrt\"],\n","    \"min_samples.split\":[6],\n","    \"min_samples.leaf\":[1,2,]\n","}\n","np.random.seed(42)\n","#splitting into x and y\n","x = samp.drop(\"target\",axis=1)\n","y= samp[\"target\"]\n","#splitting into train and test \n","from sklearn.model_selection import train_test_split\n","x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.3)\n","#instantiate random forest classifier \n","model = RandomForestClassifier()\n","#setting up randomsearchcv\n","rs_model = GridSearchCV(estimator = model,param_distributions=grid1,n_iter=10,cv=5,verbose=2)\n","#fitting random search version of model\n","rs_model.fit(x_train,y_train);"],"execution_count":47,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-47-e4f7f7e955c4>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     18\u001b[0m \u001b[0mmodel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mRandomForestClassifier\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     19\u001b[0m \u001b[0;31m#setting up randomsearchcv\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 20\u001b[0;31m \u001b[0mrs_model\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mGridSearchCV\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mestimator\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mparam_distributions\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mgrid1\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mn_iter\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mcv\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mverbose\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     21\u001b[0m \u001b[0;31m#fitting random search version of model\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     22\u001b[0m \u001b[0mrs_model\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx_train\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0my_train\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m;\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: __init__() got an unexpected keyword argument 'param_distributions'"]}]},{"cell_type":"code","metadata":{"id":"jvagSpmRSqDb","colab_type":"code","colab":{}},"source":[""],"execution_count":null,"outputs":[]}]}